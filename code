import json
import os

DATA_FILE = 'students.json'

def load_data():
    if not os.path.exists(DATA_FILE):
        return []
    with open(DATA_FILE, 'r') as f:
        return json.load(f)

def save_data(data):
    with open(DATA_FILE, 'w') as f:
        json.dump(data, f, indent=4)

def add_student():
    name = input("Enter student name: ")
    student_id = input("Enter student ID: ")
    course = input("Enter course name: ")
    grade = input("Enter grade: ")
    
    data = load_data()
    data.append({"name": name, "id": student_id, "course": course, "grade": grade})
    save_data(data)
    print("Student added successfully.")

def view_students():
    data = load_data()
    if not data:
        print("No student records found.")
        return
    for student in data:
        print(f"Name: {student['name']}, ID: {student['id']}, Course: {student['course']}, Grade: {student['grade']}")

def search_student():
    sid = input("Enter student ID to search: ")
    data = load_data()
    for student in data:
        if student['id'] == sid:
            print(f"Found: Name: {student['name']}, Course: {student['course']}, Grade: {student['grade']}")
            return
    print("Student not found.")

def delete_student():
    sid = input("Enter student ID to delete: ")
    data = load_data()
    data = [s for s in data if s['id'] != sid]
    save_data(data)
    print("Student record deleted if it existed.")

def main():
    while True:
        print("\nStudent Record Management")
        print("1. Add Student")
        print("2. View Students")
        print("3. Search Student")
        print("4. Delete Student")
        print("5. Exit")

        choice = input("Enter choice: ")
        if choice == '1':
            add_student()
        elif choice == '2':
            view_students()
        elif choice == '3':
            search_student()
        elif choice == '4':
            delete_student()
        elif choice == '5':
            break
        else:
            print("Invalid choice. Try again.")

if __name__ == "__main__":
    main()
